# create a topic
kafka-topics --create --partitions 1 --replication-factor 1 --topic quickstart-events --bootstrap-server localhost:9092

# check if created
kafka-topics --describe --topic quickstart-events --bootstrap-server localhost:9092

# write data into topic using console; stop the producer with Ctrl+c
kafka-console-producer --topic quickstart-events --bootstrap-server localhost:9092

# read data from the topic using console; stop the consumer with Ctrl+c
kafka-console-consumer --topic quickstart-events --from-beginning --bootstrap-server localhost:9092

# list all the topics 
kafka-topics --bootstrap-server=localhost:9092 --list

# stop a docker container
docker stop <container-name>

# One specific file can be copied TO the container like:
docker cp foo.txt container_id:/foo.txt

# Remove a container and its volumes
docker rm -v redis
 
# Force-remove a running container
docker rm --force redis 

# List all the running containers
docker ps


################# setting up Confluent Platform ########################
# Download or copy the contents of the Confluent Platform all-in-one Docker Compose file
# Or manually copy and create the file

curl --silent --output docker-compose.yml \
  https://raw.githubusercontent.com/confluentinc/cp-all-in-one/7.0.1-post/cp-all-in-one/docker-compose.yml


# Start the Confluent Platform stack with the -d option to run in detached mode:
docker-compose up -d

# Verify that the services are up and running:
docker-compose ps

# to exit and remove all the containers and volumes:
docker-compose down -v 

# docker-activemq
docker pull rmohr/activemq

# manually upload the plugin
docker cp <extracted plugin folder>\. connect:/usr/share/confluent-hub-components

# logs of the Kafka-connect
docker-compose logs <container-name>

# Adding activemq srouce connector
docker cp connectors\confluentinc-kafka-connect-activemq-11.0.11 connect:/usr/share/confluent-hub-components

# Adding elasticsearch sink connector
docker cp connectors\confluentinc-kafka-connect-elasticsearch-11.1.7 connect:/usr/share/confluent-hub-components

# Create activemq-jms-connector

POST: http://localhost:8083/connectors/activemq-jms-connector/config
BODY: 
{
  "connector.class": "io.confluent.connect.activemq.ActiveMQSourceConnector",
  "activemq.url": "tcp://<server>:61616", // localhost/127.0.0.1/0.0.0.0 etc. might not work, get the actual host address with ipconfig
  "max.poll.duration": "60000",
  "tasks.max": "1",
  "batch.size": "1",
  "name": "activemq-jms-connector",
  "jms.destination.name": "jms-test",
  "kafka.topic": "check-call-src",
  "activemq.password": "****",
  "jms.destination.type": "topic",
  "use.permissive.schema": "false",
  "activemq.username": "username"
}
